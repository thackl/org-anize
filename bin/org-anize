#!/bin/bash

# Author: Thomas Hackl - thackl@lim4.de

# find script dir
[ -h $0 ] && SCRIPT=$(readlink "$0") || SCRIPT="$0";
SCRIPT_DIR=$(dirname $SCRIPT);

# read config
if [ -f $SCRIPT_DIR/org-anize-rc ]; then
    . $SCRIPT_DIR/org-anize-rc
fi

CMD=${1:-"help"}
PRO=$2;

shift;

##----------------------------------------------------------------------------##
# find
org-find(){
    ORGS=$(
        find ${ORG_PATH//:/ } -maxdepth 1 -iname "*"$PRO"*-project.org" -a ! -name ".*" |
            xargs -n1 readlink -f |
            sort | uniq
        );
    PROS=($(for dir in $ORGS; do dir=$(dirname $dir); echo ${dir%/org}; done;))
    SUPS=($(for pro in ${PROS[@]}; do sup=$(basename $(dirname $pro)); echo ${sup}; done;))

    if [ -n "$PROS" ]; then
	printf "%-30s %-15s %s\n" Project Super Path
        printf -- '=%.0s' {1..80}; echo;
        for ((i=0;i<${#PROS[@]};++i)); do
	    printf "%-30s %-15s %s\n" $(basename ${PROS[i]}) ${SUPS[i]} ${PROS[i]};
	done;
    else
	echo "No org file matching "$PRO" found" 1>&2
    fi;
}




##----------------------------------------------------------------------------##
# edit
org-edit(){

    TARGET=$1; # by default, open *-project-org file

    org-find; echo "";

    if [ 0 -lt ${#PROS[@]} ]; then
	if [ $ORG_MAX_OPEN -lt ${#PROS[@]} ]; then
	    echo -e "Matching too many projects!" >&2;
	else
	    if [ -z $TARGET ]; then
		for org in $ORGS; do echo "editing $org"; done;
		$ORG_EDITOR $ORGS &
	    fi;
	fi;
    fi;
}




##----------------------------------------------------------------------------##
# open
org-open(){

    org-find;

    if [ 0 -lt ${#PROS[@]} ]; then
	if [ $ORG_MAX_OPEN -lt ${#PROS[@]} ]; then
	    echo "Matching too many projects!" >&2
	else
	    for pro in $PROS; do
                echo "opening: $pro"
		$ORG_FILEMANAGER "$pro" &
	    done;
	fi;
    fi;
}


##----------------------------------------------------------------------------##
# change-dir
org-dir(){

    org-find;

    if [ 0 -lt ${#PROS[@]} ]; then
	if [ 1 -lt ${#PROS[@]} ]; then
	    echo "Matching multiple projects" 1>&2; exit;
	else
	    for pro in $PROS; do
		echo $pro;
	    done;
	fi;
    fi;
}




##----------------------------------------------------------------------------##
# init
org-init(){
    PRO_DATE=$(date +"%D")
    mkdir -p $PRO;

    for subdir in ${ORG_PRO_DIRS//:/ }; do
        mkdir -p "$PRO/$subdir";
    done

    PRO_FILE=$PRO/$PRO$ORG_PRO_SUF; # create *-project.org at top-level
    if [ ! -e $PRO_FILE ]; then
        echo "$ORG_PRO_TPL" | while read -r line ; do
            while [[ "$line" =~ (\$\{[a-zA-Z_][a-zA-Z_0-9]*\}) ]] ; do
                LHS=${BASH_REMATCH[1]}
                RHS="$(eval echo "\"$LHS\"")"
                line=${line//$LHS/$RHS}
            done
            echo "$line" >> $PRO_FILE
        done
    fi;

    echo "Created $PRO_FILE";
}




##----------------------------------------------------------------------------##
org-help(){
    echo 'Usage: org-anize <CMD> [<PROJECT/PATTERN>] [<SUPER>] [<TOPIC>]

  find    Find and list available projects
  init    Initialize new project with default directory structure at PROJECT
  edit    Edit the master *.org file of PROJECT/PATTERN
  open    Open PROJECT/PATTERN root folder

'
}


##----------------------------------------------------------------------------##
org-$CMD $@;
